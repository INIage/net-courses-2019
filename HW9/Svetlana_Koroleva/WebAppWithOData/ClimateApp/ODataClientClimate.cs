//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generation date: 22.09.2019 1:00:16
namespace ClimateApp.ClimateDBContext.Models
{
    /// <summary>
    /// There are no comments for CitySingle in the schema.
    /// </summary>
    [global::Microsoft.OData.Client.OriginalNameAttribute("CitySingle")]
    public partial class CitySingle : global::Microsoft.OData.Client.DataServiceQuerySingle<City>
    {
        /// <summary>
        /// Initialize a new CitySingle object.
        /// </summary>
        public CitySingle(global::Microsoft.OData.Client.DataServiceContext context, string path)
            : base(context, path) {}

        /// <summary>
        /// Initialize a new CitySingle object.
        /// </summary>
        public CitySingle(global::Microsoft.OData.Client.DataServiceContext context, string path, bool isComposable)
            : base(context, path, isComposable) {}

        /// <summary>
        /// Initialize a new CitySingle object.
        /// </summary>
        public CitySingle(global::Microsoft.OData.Client.DataServiceQuerySingle<City> query)
            : base(query) {}

        /// <summary>
        /// There are no comments for Climate in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "7.5.1")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("Climate")]
        public global::Microsoft.OData.Client.DataServiceQuery<global::ClimateApp.ClimateDBContext.Models.CityClimateInfo> Climate
        {
            get
            {
                if (!this.IsComposable)
                {
                    throw new global::System.NotSupportedException("The previous function is not composable.");
                }
                if ((this._Climate == null))
                {
                    this._Climate = Context.CreateQuery<global::ClimateApp.ClimateDBContext.Models.CityClimateInfo>(GetPath("Climate"));
                }
                return this._Climate;
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "7.5.1")]
        private global::Microsoft.OData.Client.DataServiceQuery<global::ClimateApp.ClimateDBContext.Models.CityClimateInfo> _Climate;
        /// <summary>
        /// There are no comments for Country in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "7.5.1")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("Country")]
        public global::ClimateApp.ClimateDBContext.Models.CountrySingle Country
        {
            get
            {
                if (!this.IsComposable)
                {
                    throw new global::System.NotSupportedException("The previous function is not composable.");
                }
                if ((this._Country == null))
                {
                    this._Country = new global::ClimateApp.ClimateDBContext.Models.CountrySingle(this.Context, GetPath("Country"));
                }
                return this._Country;
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "7.5.1")]
        private global::ClimateApp.ClimateDBContext.Models.CountrySingle _Country;
    }
    /// <summary>
    /// There are no comments for City in the schema.
    /// </summary>
    /// <KeyProperties>
    /// CityID
    /// </KeyProperties>
    [global::Microsoft.OData.Client.Key("CityID")]
    [global::Microsoft.OData.Client.OriginalNameAttribute("City")]
    public partial class City : global::Microsoft.OData.Client.BaseEntityType, global::System.ComponentModel.INotifyPropertyChanged
    {
        /// <summary>
        /// Create a new City object.
        /// </summary>
        /// <param name="cityID">Initial value of CityID.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "7.5.1")]
        public static City CreateCity(int cityID)
        {
            City city = new City();
            city.CityID = cityID;
            return city;
        }
        /// <summary>
        /// There are no comments for Property CityID in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "7.5.1")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("CityID")]
        public int CityID
        {
            get
            {
                return this._CityID;
            }
            set
            {
                this.OnCityIDChanging(value);
                this._CityID = value;
                this.OnCityIDChanged();
                this.OnPropertyChanged("CityID");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "7.5.1")]
        private int _CityID;
        partial void OnCityIDChanging(int value);
        partial void OnCityIDChanged();
        /// <summary>
        /// There are no comments for Property CountryID in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "7.5.1")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("CountryID")]
        public global::System.Nullable<int> CountryID
        {
            get
            {
                return this._CountryID;
            }
            set
            {
                this.OnCountryIDChanging(value);
                this._CountryID = value;
                this.OnCountryIDChanged();
                this.OnPropertyChanged("CountryID");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "7.5.1")]
        private global::System.Nullable<int> _CountryID;
        partial void OnCountryIDChanging(global::System.Nullable<int> value);
        partial void OnCountryIDChanged();
        /// <summary>
        /// There are no comments for Property CityName in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "7.5.1")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("CityName")]
        public string CityName
        {
            get
            {
                return this._CityName;
            }
            set
            {
                this.OnCityNameChanging(value);
                this._CityName = value;
                this.OnCityNameChanged();
                this.OnPropertyChanged("CityName");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "7.5.1")]
        private string _CityName;
        partial void OnCityNameChanging(string value);
        partial void OnCityNameChanged();
        /// <summary>
        /// There are no comments for Property Climate in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "7.5.1")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("Climate")]
        public global::Microsoft.OData.Client.DataServiceCollection<global::ClimateApp.ClimateDBContext.Models.CityClimateInfo> Climate
        {
            get
            {
                return this._Climate;
            }
            set
            {
                this.OnClimateChanging(value);
                this._Climate = value;
                this.OnClimateChanged();
                this.OnPropertyChanged("Climate");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "7.5.1")]
        private global::Microsoft.OData.Client.DataServiceCollection<global::ClimateApp.ClimateDBContext.Models.CityClimateInfo> _Climate = new global::Microsoft.OData.Client.DataServiceCollection<global::ClimateApp.ClimateDBContext.Models.CityClimateInfo>(null, global::Microsoft.OData.Client.TrackingMode.None);
        partial void OnClimateChanging(global::Microsoft.OData.Client.DataServiceCollection<global::ClimateApp.ClimateDBContext.Models.CityClimateInfo> value);
        partial void OnClimateChanged();
        /// <summary>
        /// There are no comments for Property Country in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "7.5.1")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("Country")]
        public global::ClimateApp.ClimateDBContext.Models.Country Country
        {
            get
            {
                return this._Country;
            }
            set
            {
                this.OnCountryChanging(value);
                this._Country = value;
                this.OnCountryChanged();
                this.OnPropertyChanged("Country");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "7.5.1")]
        private global::ClimateApp.ClimateDBContext.Models.Country _Country;
        partial void OnCountryChanging(global::ClimateApp.ClimateDBContext.Models.Country value);
        partial void OnCountryChanged();
        /// <summary>
        /// This event is raised when the value of the property is changed
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "7.5.1")]
        public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        /// <summary>
        /// The value of the property is changed
        /// </summary>
        /// <param name="property">property name</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "7.5.1")]
        protected virtual void OnPropertyChanged(string property)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new global::System.ComponentModel.PropertyChangedEventArgs(property));
            }
        }
    }
    /// <summary>
    /// There are no comments for CountrySingle in the schema.
    /// </summary>
    [global::Microsoft.OData.Client.OriginalNameAttribute("CountrySingle")]
    public partial class CountrySingle : global::Microsoft.OData.Client.DataServiceQuerySingle<Country>
    {
        /// <summary>
        /// Initialize a new CountrySingle object.
        /// </summary>
        public CountrySingle(global::Microsoft.OData.Client.DataServiceContext context, string path)
            : base(context, path) {}

        /// <summary>
        /// Initialize a new CountrySingle object.
        /// </summary>
        public CountrySingle(global::Microsoft.OData.Client.DataServiceContext context, string path, bool isComposable)
            : base(context, path, isComposable) {}

        /// <summary>
        /// Initialize a new CountrySingle object.
        /// </summary>
        public CountrySingle(global::Microsoft.OData.Client.DataServiceQuerySingle<Country> query)
            : base(query) {}

        /// <summary>
        /// There are no comments for Cities in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "7.5.1")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("Cities")]
        public global::Microsoft.OData.Client.DataServiceQuery<global::ClimateApp.ClimateDBContext.Models.City> Cities
        {
            get
            {
                if (!this.IsComposable)
                {
                    throw new global::System.NotSupportedException("The previous function is not composable.");
                }
                if ((this._Cities == null))
                {
                    this._Cities = Context.CreateQuery<global::ClimateApp.ClimateDBContext.Models.City>(GetPath("Cities"));
                }
                return this._Cities;
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "7.5.1")]
        private global::Microsoft.OData.Client.DataServiceQuery<global::ClimateApp.ClimateDBContext.Models.City> _Cities;
    }
    /// <summary>
    /// There are no comments for Country in the schema.
    /// </summary>
    /// <KeyProperties>
    /// CountryID
    /// </KeyProperties>
    [global::Microsoft.OData.Client.Key("CountryID")]
    [global::Microsoft.OData.Client.OriginalNameAttribute("Country")]
    public partial class Country : global::Microsoft.OData.Client.BaseEntityType, global::System.ComponentModel.INotifyPropertyChanged
    {
        /// <summary>
        /// Create a new Country object.
        /// </summary>
        /// <param name="countryID">Initial value of CountryID.</param>
        /// <param name="region">Initial value of Region.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "7.5.1")]
        public static Country CreateCountry(int countryID, global::ClimateApp.ClimateDBContext.Models.WorldRegions region)
        {
            Country country = new Country();
            country.CountryID = countryID;
            country.Region = region;
            return country;
        }
        /// <summary>
        /// There are no comments for Property CountryID in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "7.5.1")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("CountryID")]
        public int CountryID
        {
            get
            {
                return this._CountryID;
            }
            set
            {
                this.OnCountryIDChanging(value);
                this._CountryID = value;
                this.OnCountryIDChanged();
                this.OnPropertyChanged("CountryID");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "7.5.1")]
        private int _CountryID;
        partial void OnCountryIDChanging(int value);
        partial void OnCountryIDChanged();
        /// <summary>
        /// There are no comments for Property Region in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "7.5.1")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("Region")]
        public global::ClimateApp.ClimateDBContext.Models.WorldRegions Region
        {
            get
            {
                return this._Region;
            }
            set
            {
                this.OnRegionChanging(value);
                this._Region = value;
                this.OnRegionChanged();
                this.OnPropertyChanged("Region");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "7.5.1")]
        private global::ClimateApp.ClimateDBContext.Models.WorldRegions _Region;
        partial void OnRegionChanging(global::ClimateApp.ClimateDBContext.Models.WorldRegions value);
        partial void OnRegionChanged();
        /// <summary>
        /// There are no comments for Property CountryName in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "7.5.1")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("CountryName")]
        public string CountryName
        {
            get
            {
                return this._CountryName;
            }
            set
            {
                this.OnCountryNameChanging(value);
                this._CountryName = value;
                this.OnCountryNameChanged();
                this.OnPropertyChanged("CountryName");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "7.5.1")]
        private string _CountryName;
        partial void OnCountryNameChanging(string value);
        partial void OnCountryNameChanged();
        /// <summary>
        /// There are no comments for Property Cities in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "7.5.1")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("Cities")]
        public global::Microsoft.OData.Client.DataServiceCollection<global::ClimateApp.ClimateDBContext.Models.City> Cities
        {
            get
            {
                return this._Cities;
            }
            set
            {
                this.OnCitiesChanging(value);
                this._Cities = value;
                this.OnCitiesChanged();
                this.OnPropertyChanged("Cities");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "7.5.1")]
        private global::Microsoft.OData.Client.DataServiceCollection<global::ClimateApp.ClimateDBContext.Models.City> _Cities = new global::Microsoft.OData.Client.DataServiceCollection<global::ClimateApp.ClimateDBContext.Models.City>(null, global::Microsoft.OData.Client.TrackingMode.None);
        partial void OnCitiesChanging(global::Microsoft.OData.Client.DataServiceCollection<global::ClimateApp.ClimateDBContext.Models.City> value);
        partial void OnCitiesChanged();
        /// <summary>
        /// This event is raised when the value of the property is changed
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "7.5.1")]
        public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        /// <summary>
        /// The value of the property is changed
        /// </summary>
        /// <param name="property">property name</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "7.5.1")]
        protected virtual void OnPropertyChanged(string property)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new global::System.ComponentModel.PropertyChangedEventArgs(property));
            }
        }
    }
    /// <summary>
    /// There are no comments for CityClimateInfoSingle in the schema.
    /// </summary>
    [global::Microsoft.OData.Client.OriginalNameAttribute("CityClimateInfoSingle")]
    public partial class CityClimateInfoSingle : global::Microsoft.OData.Client.DataServiceQuerySingle<CityClimateInfo>
    {
        /// <summary>
        /// Initialize a new CityClimateInfoSingle object.
        /// </summary>
        public CityClimateInfoSingle(global::Microsoft.OData.Client.DataServiceContext context, string path)
            : base(context, path) {}

        /// <summary>
        /// Initialize a new CityClimateInfoSingle object.
        /// </summary>
        public CityClimateInfoSingle(global::Microsoft.OData.Client.DataServiceContext context, string path, bool isComposable)
            : base(context, path, isComposable) {}

        /// <summary>
        /// Initialize a new CityClimateInfoSingle object.
        /// </summary>
        public CityClimateInfoSingle(global::Microsoft.OData.Client.DataServiceQuerySingle<CityClimateInfo> query)
            : base(query) {}

        /// <summary>
        /// There are no comments for City in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "7.5.1")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("City")]
        public global::ClimateApp.ClimateDBContext.Models.CitySingle City
        {
            get
            {
                if (!this.IsComposable)
                {
                    throw new global::System.NotSupportedException("The previous function is not composable.");
                }
                if ((this._City == null))
                {
                    this._City = new global::ClimateApp.ClimateDBContext.Models.CitySingle(this.Context, GetPath("City"));
                }
                return this._City;
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "7.5.1")]
        private global::ClimateApp.ClimateDBContext.Models.CitySingle _City;
    }
    /// <summary>
    /// There are no comments for CityClimateInfo in the schema.
    /// </summary>
    /// <KeyProperties>
    /// CityClimateInfoID
    /// </KeyProperties>
    [global::Microsoft.OData.Client.Key("CityClimateInfoID")]
    [global::Microsoft.OData.Client.OriginalNameAttribute("CityClimateInfo")]
    public partial class CityClimateInfo : global::Microsoft.OData.Client.BaseEntityType, global::System.ComponentModel.INotifyPropertyChanged
    {
        /// <summary>
        /// Create a new CityClimateInfo object.
        /// </summary>
        /// <param name="cityClimateInfoID">Initial value of CityClimateInfoID.</param>
        /// <param name="month">Initial value of Month.</param>
        /// <param name="avgTemperature">Initial value of AvgTemperature.</param>
        /// <param name="waterTemperature">Initial value of WaterTemperature.</param>
        /// <param name="sunnyDays">Initial value of SunnyDays.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "7.5.1")]
        public static CityClimateInfo CreateCityClimateInfo(int cityClimateInfoID, global::ClimateApp.ClimateDBContext.Models.Months month, double avgTemperature, double waterTemperature, int sunnyDays)
        {
            CityClimateInfo cityClimateInfo = new CityClimateInfo();
            cityClimateInfo.CityClimateInfoID = cityClimateInfoID;
            cityClimateInfo.Month = month;
            cityClimateInfo.AvgTemperature = avgTemperature;
            cityClimateInfo.WaterTemperature = waterTemperature;
            cityClimateInfo.SunnyDays = sunnyDays;
            return cityClimateInfo;
        }
        /// <summary>
        /// There are no comments for Property CityClimateInfoID in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "7.5.1")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("CityClimateInfoID")]
        public int CityClimateInfoID
        {
            get
            {
                return this._CityClimateInfoID;
            }
            set
            {
                this.OnCityClimateInfoIDChanging(value);
                this._CityClimateInfoID = value;
                this.OnCityClimateInfoIDChanged();
                this.OnPropertyChanged("CityClimateInfoID");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "7.5.1")]
        private int _CityClimateInfoID;
        partial void OnCityClimateInfoIDChanging(int value);
        partial void OnCityClimateInfoIDChanged();
        /// <summary>
        /// There are no comments for Property CityID in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "7.5.1")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("CityID")]
        public global::System.Nullable<int> CityID
        {
            get
            {
                return this._CityID;
            }
            set
            {
                this.OnCityIDChanging(value);
                this._CityID = value;
                this.OnCityIDChanged();
                this.OnPropertyChanged("CityID");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "7.5.1")]
        private global::System.Nullable<int> _CityID;
        partial void OnCityIDChanging(global::System.Nullable<int> value);
        partial void OnCityIDChanged();
        /// <summary>
        /// There are no comments for Property Month in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "7.5.1")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("Month")]
        public global::ClimateApp.ClimateDBContext.Models.Months Month
        {
            get
            {
                return this._Month;
            }
            set
            {
                this.OnMonthChanging(value);
                this._Month = value;
                this.OnMonthChanged();
                this.OnPropertyChanged("Month");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "7.5.1")]
        private global::ClimateApp.ClimateDBContext.Models.Months _Month;
        partial void OnMonthChanging(global::ClimateApp.ClimateDBContext.Models.Months value);
        partial void OnMonthChanged();
        /// <summary>
        /// There are no comments for Property AvgTemperature in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "7.5.1")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("AvgTemperature")]
        public double AvgTemperature
        {
            get
            {
                return this._AvgTemperature;
            }
            set
            {
                this.OnAvgTemperatureChanging(value);
                this._AvgTemperature = value;
                this.OnAvgTemperatureChanged();
                this.OnPropertyChanged("AvgTemperature");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "7.5.1")]
        private double _AvgTemperature;
        partial void OnAvgTemperatureChanging(double value);
        partial void OnAvgTemperatureChanged();
        /// <summary>
        /// There are no comments for Property WaterTemperature in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "7.5.1")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("WaterTemperature")]
        public double WaterTemperature
        {
            get
            {
                return this._WaterTemperature;
            }
            set
            {
                this.OnWaterTemperatureChanging(value);
                this._WaterTemperature = value;
                this.OnWaterTemperatureChanged();
                this.OnPropertyChanged("WaterTemperature");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "7.5.1")]
        private double _WaterTemperature;
        partial void OnWaterTemperatureChanging(double value);
        partial void OnWaterTemperatureChanged();
        /// <summary>
        /// There are no comments for Property SunnyDays in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "7.5.1")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("SunnyDays")]
        public int SunnyDays
        {
            get
            {
                return this._SunnyDays;
            }
            set
            {
                this.OnSunnyDaysChanging(value);
                this._SunnyDays = value;
                this.OnSunnyDaysChanged();
                this.OnPropertyChanged("SunnyDays");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "7.5.1")]
        private int _SunnyDays;
        partial void OnSunnyDaysChanging(int value);
        partial void OnSunnyDaysChanged();
        /// <summary>
        /// There are no comments for Property City in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "7.5.1")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("City")]
        public global::ClimateApp.ClimateDBContext.Models.City City
        {
            get
            {
                return this._City;
            }
            set
            {
                this.OnCityChanging(value);
                this._City = value;
                this.OnCityChanged();
                this.OnPropertyChanged("City");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "7.5.1")]
        private global::ClimateApp.ClimateDBContext.Models.City _City;
        partial void OnCityChanging(global::ClimateApp.ClimateDBContext.Models.City value);
        partial void OnCityChanged();
        /// <summary>
        /// This event is raised when the value of the property is changed
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "7.5.1")]
        public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        /// <summary>
        /// The value of the property is changed
        /// </summary>
        /// <param name="property">property name</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "7.5.1")]
        protected virtual void OnPropertyChanged(string property)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new global::System.ComponentModel.PropertyChangedEventArgs(property));
            }
        }
    }
    /// <summary>
    /// There are no comments for Months in the schema.
    /// </summary>
    [global::Microsoft.OData.Client.OriginalNameAttribute("Months")]
    public enum Months
    {
        [global::Microsoft.OData.Client.OriginalNameAttribute("january")]
        January = 0,
        [global::Microsoft.OData.Client.OriginalNameAttribute("february")]
        February = 1,
        [global::Microsoft.OData.Client.OriginalNameAttribute("march")]
        March = 2,
        [global::Microsoft.OData.Client.OriginalNameAttribute("april")]
        April = 3,
        [global::Microsoft.OData.Client.OriginalNameAttribute("may")]
        May = 4,
        [global::Microsoft.OData.Client.OriginalNameAttribute("june")]
        June = 5,
        [global::Microsoft.OData.Client.OriginalNameAttribute("july")]
        July = 6,
        [global::Microsoft.OData.Client.OriginalNameAttribute("august")]
        August = 7,
        [global::Microsoft.OData.Client.OriginalNameAttribute("september")]
        September = 8,
        [global::Microsoft.OData.Client.OriginalNameAttribute("october")]
        October = 9,
        [global::Microsoft.OData.Client.OriginalNameAttribute("november")]
        November = 10,
        [global::Microsoft.OData.Client.OriginalNameAttribute("december")]
        December = 11
    }
    /// <summary>
    /// There are no comments for WorldRegions in the schema.
    /// </summary>
    [global::Microsoft.OData.Client.OriginalNameAttribute("WorldRegions")]
    public enum WorldRegions
    {
        [global::Microsoft.OData.Client.OriginalNameAttribute("Eurasia")]
        Eurasia = 0,
        [global::Microsoft.OData.Client.OriginalNameAttribute("Africa")]
        Africa = 1,
        [global::Microsoft.OData.Client.OriginalNameAttribute("NorthAmerica")]
        NorthAmerica = 2,
        [global::Microsoft.OData.Client.OriginalNameAttribute("SouthAmerica")]
        SouthAmerica = 3,
        [global::Microsoft.OData.Client.OriginalNameAttribute("Australia")]
        Australia = 4
    }
    /// <summary>
    /// Class containing all extension methods
    /// </summary>
    public static class ExtensionMethods
    {
        /// <summary>
        /// Get an entity of type global::ClimateApp.ClimateDBContext.Models.City as global::ClimateApp.ClimateDBContext.Models.CitySingle specified by key from an entity set
        /// </summary>
        /// <param name="source">source entity set</param>
        /// <param name="keys">dictionary with the names and values of keys</param>
        public static global::ClimateApp.ClimateDBContext.Models.CitySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::ClimateApp.ClimateDBContext.Models.City> source, global::System.Collections.Generic.Dictionary<string, object> keys)
        {
            return new global::ClimateApp.ClimateDBContext.Models.CitySingle(source.Context, source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(source.Context, keys)));
        }
        /// <summary>
        /// Get an entity of type global::ClimateApp.ClimateDBContext.Models.City as global::ClimateApp.ClimateDBContext.Models.CitySingle specified by key from an entity set
        /// </summary>
        /// <param name="source">source entity set</param>
        /// <param name="cityID">The value of cityID</param>
        public static global::ClimateApp.ClimateDBContext.Models.CitySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::ClimateApp.ClimateDBContext.Models.City> source,
            int cityID)
        {
            global::System.Collections.Generic.Dictionary<string, object> keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "CityID", cityID }
            };
            return new global::ClimateApp.ClimateDBContext.Models.CitySingle(source.Context, source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(source.Context, keys)));
        }
        /// <summary>
        /// Get an entity of type global::ClimateApp.ClimateDBContext.Models.Country as global::ClimateApp.ClimateDBContext.Models.CountrySingle specified by key from an entity set
        /// </summary>
        /// <param name="source">source entity set</param>
        /// <param name="keys">dictionary with the names and values of keys</param>
        public static global::ClimateApp.ClimateDBContext.Models.CountrySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::ClimateApp.ClimateDBContext.Models.Country> source, global::System.Collections.Generic.Dictionary<string, object> keys)
        {
            return new global::ClimateApp.ClimateDBContext.Models.CountrySingle(source.Context, source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(source.Context, keys)));
        }
        /// <summary>
        /// Get an entity of type global::ClimateApp.ClimateDBContext.Models.Country as global::ClimateApp.ClimateDBContext.Models.CountrySingle specified by key from an entity set
        /// </summary>
        /// <param name="source">source entity set</param>
        /// <param name="countryID">The value of countryID</param>
        public static global::ClimateApp.ClimateDBContext.Models.CountrySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::ClimateApp.ClimateDBContext.Models.Country> source,
            int countryID)
        {
            global::System.Collections.Generic.Dictionary<string, object> keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "CountryID", countryID }
            };
            return new global::ClimateApp.ClimateDBContext.Models.CountrySingle(source.Context, source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(source.Context, keys)));
        }
        /// <summary>
        /// Get an entity of type global::ClimateApp.ClimateDBContext.Models.CityClimateInfo as global::ClimateApp.ClimateDBContext.Models.CityClimateInfoSingle specified by key from an entity set
        /// </summary>
        /// <param name="source">source entity set</param>
        /// <param name="keys">dictionary with the names and values of keys</param>
        public static global::ClimateApp.ClimateDBContext.Models.CityClimateInfoSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::ClimateApp.ClimateDBContext.Models.CityClimateInfo> source, global::System.Collections.Generic.Dictionary<string, object> keys)
        {
            return new global::ClimateApp.ClimateDBContext.Models.CityClimateInfoSingle(source.Context, source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(source.Context, keys)));
        }
        /// <summary>
        /// Get an entity of type global::ClimateApp.ClimateDBContext.Models.CityClimateInfo as global::ClimateApp.ClimateDBContext.Models.CityClimateInfoSingle specified by key from an entity set
        /// </summary>
        /// <param name="source">source entity set</param>
        /// <param name="cityClimateInfoID">The value of cityClimateInfoID</param>
        public static global::ClimateApp.ClimateDBContext.Models.CityClimateInfoSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::ClimateApp.ClimateDBContext.Models.CityClimateInfo> source,
            int cityClimateInfoID)
        {
            global::System.Collections.Generic.Dictionary<string, object> keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "CityClimateInfoID", cityClimateInfoID }
            };
            return new global::ClimateApp.ClimateDBContext.Models.CityClimateInfoSingle(source.Context, source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(source.Context, keys)));
        }
    }
}
namespace ClimateApp.Default
{
    /// <summary>
    /// There are no comments for Container in the schema.
    /// </summary>
    [global::Microsoft.OData.Client.OriginalNameAttribute("Container")]
    public partial class Container : global::Microsoft.OData.Client.DataServiceContext
    {
        /// <summary>
        /// Initialize a new Container object.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "7.5.1")]
        public Container(global::System.Uri serviceRoot) : 
                base(serviceRoot, global::Microsoft.OData.Client.ODataProtocolVersion.V4)
        {
            this.ResolveName = new global::System.Func<global::System.Type, string>(this.ResolveNameFromType);
            this.ResolveType = new global::System.Func<string, global::System.Type>(this.ResolveTypeFromName);
            this.OnContextCreated();
            this.Format.LoadServiceModel = GeneratedEdmModel.GetInstance;
            this.Format.UseJson();
        }
        partial void OnContextCreated();
        /// <summary>
        /// Since the namespace configured for this service reference
        /// in Visual Studio is different from the one indicated in the
        /// server schema, use type-mappers to map between the two.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "7.5.1")]
        protected global::System.Type ResolveTypeFromName(string typeName)
        {
            global::System.Type resolvedType = this.DefaultResolveType(typeName, "ClimateDBContext.Models", "ClimateApp.ClimateDBContext.Models");
            if ((resolvedType != null))
            {
                return resolvedType;
            }
            resolvedType = this.DefaultResolveType(typeName, "Default", "ClimateApp.Default");
            if ((resolvedType != null))
            {
                return resolvedType;
            }
            return null;
        }
        /// <summary>
        /// Since the namespace configured for this service reference
        /// in Visual Studio is different from the one indicated in the
        /// server schema, use type-mappers to map between the two.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "7.5.1")]
        protected string ResolveNameFromType(global::System.Type clientType)
        {
            global::Microsoft.OData.Client.OriginalNameAttribute originalNameAttribute = (global::Microsoft.OData.Client.OriginalNameAttribute)global::System.Linq.Enumerable.SingleOrDefault(global::Microsoft.OData.Client.Utility.GetCustomAttributes(clientType, typeof(global::Microsoft.OData.Client.OriginalNameAttribute), true));
            if (clientType.Namespace.Equals("ClimateApp.ClimateDBContext.Models", global::System.StringComparison.Ordinal))
            {
                if (originalNameAttribute != null)
                {
                    return string.Concat("ClimateDBContext.Models.", originalNameAttribute.OriginalName);
                }
                return string.Concat("ClimateDBContext.Models.", clientType.Name);
            }
            if (clientType.Namespace.Equals("ClimateApp.Default", global::System.StringComparison.Ordinal))
            {
                if (originalNameAttribute != null)
                {
                    return string.Concat("Default.", originalNameAttribute.OriginalName);
                }
                return string.Concat("Default.", clientType.Name);
            }
            return null;
        }
        /// <summary>
        /// There are no comments for Cities in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "7.5.1")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("Cities")]
        public global::Microsoft.OData.Client.DataServiceQuery<global::ClimateApp.ClimateDBContext.Models.City> Cities
        {
            get
            {
                if ((this._Cities == null))
                {
                    this._Cities = base.CreateQuery<global::ClimateApp.ClimateDBContext.Models.City>("Cities");
                }
                return this._Cities;
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "7.5.1")]
        private global::Microsoft.OData.Client.DataServiceQuery<global::ClimateApp.ClimateDBContext.Models.City> _Cities;
        /// <summary>
        /// There are no comments for Countries in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "7.5.1")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("Countries")]
        public global::Microsoft.OData.Client.DataServiceQuery<global::ClimateApp.ClimateDBContext.Models.Country> Countries
        {
            get
            {
                if ((this._Countries == null))
                {
                    this._Countries = base.CreateQuery<global::ClimateApp.ClimateDBContext.Models.Country>("Countries");
                }
                return this._Countries;
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "7.5.1")]
        private global::Microsoft.OData.Client.DataServiceQuery<global::ClimateApp.ClimateDBContext.Models.Country> _Countries;
        /// <summary>
        /// There are no comments for ClimateInfo in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "7.5.1")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("ClimateInfo")]
        public global::Microsoft.OData.Client.DataServiceQuery<global::ClimateApp.ClimateDBContext.Models.CityClimateInfo> ClimateInfo
        {
            get
            {
                if ((this._ClimateInfo == null))
                {
                    this._ClimateInfo = base.CreateQuery<global::ClimateApp.ClimateDBContext.Models.CityClimateInfo>("ClimateInfo");
                }
                return this._ClimateInfo;
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "7.5.1")]
        private global::Microsoft.OData.Client.DataServiceQuery<global::ClimateApp.ClimateDBContext.Models.CityClimateInfo> _ClimateInfo;
        /// <summary>
        /// There are no comments for Cities in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "7.5.1")]
        public void AddToCities(global::ClimateApp.ClimateDBContext.Models.City city)
        {
            base.AddObject("Cities", city);
        }
        /// <summary>
        /// There are no comments for Countries in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "7.5.1")]
        public void AddToCountries(global::ClimateApp.ClimateDBContext.Models.Country country)
        {
            base.AddObject("Countries", country);
        }
        /// <summary>
        /// There are no comments for ClimateInfo in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "7.5.1")]
        public void AddToClimateInfo(global::ClimateApp.ClimateDBContext.Models.CityClimateInfo cityClimateInfo)
        {
            base.AddObject("ClimateInfo", cityClimateInfo);
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "7.5.1")]
        private abstract class GeneratedEdmModel
        {
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "7.5.1")]
            private static global::Microsoft.OData.Edm.IEdmModel ParsedModel = LoadModelFromString();
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "7.5.1")]
            private const string Edmx = @"<edmx:Edmx Version=""4.0"" xmlns:edmx=""http://docs.oasis-open.org/odata/ns/edmx"">
  <edmx:DataServices>
    <Schema Namespace=""ClimateDBContext.Models"" xmlns=""http://docs.oasis-open.org/odata/ns/edm"">
      <EntityType Name=""City"">
        <Key>
          <PropertyRef Name=""CityID"" />
        </Key>
        <Property Name=""CityID"" Type=""Edm.Int32"" Nullable=""false"" />
        <Property Name=""CountryID"" Type=""Edm.Int32"" />
        <Property Name=""CityName"" Type=""Edm.String"" />
        <NavigationProperty Name=""Climate"" Type=""Collection(ClimateDBContext.Models.CityClimateInfo)"" />
        <NavigationProperty Name=""Country"" Type=""ClimateDBContext.Models.Country"">
          <ReferentialConstraint Property=""CountryID"" ReferencedProperty=""CountryID"" />
        </NavigationProperty>
      </EntityType>
      <EntityType Name=""Country"">
        <Key>
          <PropertyRef Name=""CountryID"" />
        </Key>
        <Property Name=""CountryID"" Type=""Edm.Int32"" Nullable=""false"" />
        <Property Name=""Region"" Type=""ClimateDBContext.Models.WorldRegions"" Nullable=""false"" />
        <Property Name=""CountryName"" Type=""Edm.String"" />
        <NavigationProperty Name=""Cities"" Type=""Collection(ClimateDBContext.Models.City)"" />
      </EntityType>
      <EntityType Name=""CityClimateInfo"">
        <Key>
          <PropertyRef Name=""CityClimateInfoID"" />
        </Key>
        <Property Name=""CityClimateInfoID"" Type=""Edm.Int32"" Nullable=""false"" />
        <Property Name=""CityID"" Type=""Edm.Int32"" />
        <Property Name=""Month"" Type=""ClimateDBContext.Models.Months"" Nullable=""false"" />
        <Property Name=""AvgTemperature"" Type=""Edm.Double"" Nullable=""false"" />
        <Property Name=""WaterTemperature"" Type=""Edm.Double"" Nullable=""false"" />
        <Property Name=""SunnyDays"" Type=""Edm.Int32"" Nullable=""false"" />
        <NavigationProperty Name=""City"" Type=""ClimateDBContext.Models.City"">
          <ReferentialConstraint Property=""CityID"" ReferencedProperty=""CityID"" />
        </NavigationProperty>
      </EntityType>
      <EnumType Name=""Months"">
        <Member Name=""january"" Value=""0"" />
        <Member Name=""february"" Value=""1"" />
        <Member Name=""march"" Value=""2"" />
        <Member Name=""april"" Value=""3"" />
        <Member Name=""may"" Value=""4"" />
        <Member Name=""june"" Value=""5"" />
        <Member Name=""july"" Value=""6"" />
        <Member Name=""august"" Value=""7"" />
        <Member Name=""september"" Value=""8"" />
        <Member Name=""october"" Value=""9"" />
        <Member Name=""november"" Value=""10"" />
        <Member Name=""december"" Value=""11"" />
      </EnumType>
      <EnumType Name=""WorldRegions"">
        <Member Name=""Eurasia"" Value=""0"" />
        <Member Name=""Africa"" Value=""1"" />
        <Member Name=""NorthAmerica"" Value=""2"" />
        <Member Name=""SouthAmerica"" Value=""3"" />
        <Member Name=""Australia"" Value=""4"" />
      </EnumType>
    </Schema>
    <Schema Namespace=""Default"" xmlns=""http://docs.oasis-open.org/odata/ns/edm"">
      <EntityContainer Name=""Container"">
        <EntitySet Name=""Cities"" EntityType=""ClimateDBContext.Models.City"">
          <NavigationPropertyBinding Path=""Climate"" Target=""ClimateInfo"" />
          <NavigationPropertyBinding Path=""Country"" Target=""Countries"" />
        </EntitySet>
        <EntitySet Name=""Countries"" EntityType=""ClimateDBContext.Models.Country"">
          <NavigationPropertyBinding Path=""Cities"" Target=""Cities"" />
        </EntitySet>
        <EntitySet Name=""ClimateInfo"" EntityType=""ClimateDBContext.Models.CityClimateInfo"">
          <NavigationPropertyBinding Path=""City"" Target=""Cities"" />
        </EntitySet>
      </EntityContainer>
    </Schema>
  </edmx:DataServices>
</edmx:Edmx>";
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "7.5.1")]
            public static global::Microsoft.OData.Edm.IEdmModel GetInstance()
            {
                return ParsedModel;
            }
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "7.5.1")]
            private static global::Microsoft.OData.Edm.IEdmModel LoadModelFromString()
            {
                global::System.Xml.XmlReader reader = CreateXmlReader(Edmx);
                try
                {
                    global::System.Collections.Generic.IEnumerable<global::Microsoft.OData.Edm.Validation.EdmError> errors;
                    global::Microsoft.OData.Edm.IEdmModel edmModel;
                    
                    if (!global::Microsoft.OData.Edm.Csdl.CsdlReader.TryParse(reader, true, out edmModel, out errors))
                    {
                        global::System.Text.StringBuilder errorMessages = new System.Text.StringBuilder();
                        foreach (var error in errors)
                        {
                            errorMessages.Append(error.ErrorMessage);
                            errorMessages.Append("; ");
                        }
                        throw new global::System.InvalidOperationException(errorMessages.ToString());
                    }

                    return edmModel;
                }
                finally
                {
                    ((global::System.IDisposable)(reader)).Dispose();
                }
            }
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "7.5.1")]
            private static global::System.Xml.XmlReader CreateXmlReader(string edmxToParse)
            {
                return global::System.Xml.XmlReader.Create(new global::System.IO.StringReader(edmxToParse));
            }
        }
    }
}
