<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="StockExchangeDataSet" targetNamespace="http://tempuri.org/StockExchangeDataSet.xsd" xmlns:mstns="http://tempuri.org/StockExchangeDataSet.xsd" xmlns="http://tempuri.org/StockExchangeDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="StockExchangeConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="StockExchangeConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.ClientsUI.Properties.Settings.GlobalReference.Default.StockExchangeConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="StocksTableAdapter" GeneratorDataComponentClassName="StocksTableAdapter" Name="Stocks" UserDataComponentName="StocksTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="StockExchangeConnectionString (Settings)" DbObjectName="StockExchange.dbo.Stocks" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Stocks] WHERE (([StockID] = @Original_StockID) AND ([IssuerID] = @Original_IssuerID) AND ((@IsNull_StockType = 1 AND [StockType] IS NULL) OR ([StockType] = @Original_StockType)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_StockID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="StockID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_IssuerID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IssuerID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_StockType" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="StockType" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_StockType" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="StockType" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Stocks] ([StockPrefix], [IssuerID], [StockType]) VALUES (@StockPrefix, @IssuerID, @StockType);
SELECT StockID, StockPrefix, IssuerID, StockType FROM Stocks WHERE (StockID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@StockPrefix" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="StockPrefix" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IssuerID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IssuerID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@StockType" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="StockType" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT StockID, StockPrefix, IssuerID, StockType FROM dbo.Stocks</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Stocks] SET [StockPrefix] = @StockPrefix, [IssuerID] = @IssuerID, [StockType] = @StockType WHERE (([StockID] = @Original_StockID) AND ([IssuerID] = @Original_IssuerID) AND ((@IsNull_StockType = 1 AND [StockType] IS NULL) OR ([StockType] = @Original_StockType)));
SELECT StockID, StockPrefix, IssuerID, StockType FROM Stocks WHERE (StockID = @StockID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@StockPrefix" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="StockPrefix" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IssuerID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IssuerID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@StockType" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="StockType" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_StockID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="StockID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_IssuerID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IssuerID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_StockType" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="StockType" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_StockType" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="StockType" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="StockID" ColumnName="StockID" DataSourceName="StockExchange.dbo.Stocks" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@StockID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="StockID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="StockID" DataSetColumn="StockID" />
              <Mapping SourceColumn="StockPrefix" DataSetColumn="StockPrefix" />
              <Mapping SourceColumn="IssuerID" DataSetColumn="IssuerID" />
              <Mapping SourceColumn="StockType" DataSetColumn="StockType" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="StockExchangeDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="StockExchangeDataSet" msprop:Generator_UserDSName="StockExchangeDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Stocks" msprop:Generator_TableClassName="StocksDataTable" msprop:Generator_TableVarName="tableStocks" msprop:Generator_TablePropName="Stocks" msprop:Generator_RowDeletingName="StocksRowDeleting" msprop:Generator_RowChangingName="StocksRowChanging" msprop:Generator_RowEvHandlerName="StocksRowChangeEventHandler" msprop:Generator_RowDeletedName="StocksRowDeleted" msprop:Generator_UserTableName="Stocks" msprop:Generator_RowChangedName="StocksRowChanged" msprop:Generator_RowEvArgName="StocksRowChangeEvent" msprop:Generator_RowClassName="StocksRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="StockID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnStockID" msprop:Generator_ColumnPropNameInRow="StockID" msprop:Generator_ColumnPropNameInTable="StockIDColumn" msprop:Generator_UserColumnName="StockID" type="xs:int" />
              <xs:element name="StockPrefix" msprop:Generator_ColumnVarNameInTable="columnStockPrefix" msprop:Generator_ColumnPropNameInRow="StockPrefix" msprop:Generator_ColumnPropNameInTable="StockPrefixColumn" msprop:Generator_UserColumnName="StockPrefix" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="IssuerID" msprop:Generator_ColumnVarNameInTable="columnIssuerID" msprop:Generator_ColumnPropNameInRow="IssuerID" msprop:Generator_ColumnPropNameInTable="IssuerIDColumn" msprop:Generator_UserColumnName="IssuerID" type="xs:int" />
              <xs:element name="StockType" msprop:Generator_ColumnVarNameInTable="columnStockType" msprop:Generator_ColumnPropNameInRow="StockType" msprop:Generator_ColumnPropNameInTable="StockTypeColumn" msprop:Generator_UserColumnName="StockType" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Stocks" />
      <xs:field xpath="mstns:StockID" />
    </xs:unique>
  </xs:element>
</xs:schema>