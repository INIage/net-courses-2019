<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:HW6"
        xmlns:DataModel="clr-namespace:HW6.DataModel" x:Name="ProgramWindow" x:Class="HW6.MainWindow"
        mc:Ignorable="d"
        Title="MainWindow" Loaded="ProgramWindow_Loaded">
    <Window.Resources>
        <CollectionViewSource x:Key="traderViewSource" d:DesignSource="{d:DesignInstance {x:Type DataModel:Trader}, CreateList=True}" Filter="traderViewSourceFilter"/>
        <CollectionViewSource x:Key="portfolioViewSource" d:DesignSource="{d:DesignInstance {x:Type DataModel:Portfolio}, CreateList=True}"/>
        <CollectionViewSource x:Key="shareViewSource" d:DesignSource="{d:DesignInstance {x:Type DataModel:Share}, CreateList=True}"/>
        <CollectionViewSource x:Key="transactionViewSource" d:DesignSource="{d:DesignInstance {x:Type DataModel:Transaction}, CreateList=True}"/>
    </Window.Resources>
    <Grid x:Name="MainGrid" Margin="0" DataContext="{StaticResource portfolioViewSource}" >
        <Grid.ColumnDefinitions>
            <ColumnDefinition MaxWidth="150"/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <TextBox x:Name="StatusTextBox" TextWrapping="Wrap" IsReadOnly="True" MinWidth="600" MinHeight="400" Grid.Column="1" Margin="5,10,10,10" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto"/>
        <Grid x:Name="TraderInfoMainGrid" Margin="5,10,10,10" Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition Height="0.25*"/>
            </Grid.RowDefinitions>
            <DataGrid x:Name="traderDataGrid" DataContext="{StaticResource traderViewSource}" ItemsSource="{Binding Mode=OneWay}" AutoGenerateColumns="False" CanUserAddRows="False" CanUserDeleteRows="False">
                <DataGrid.Columns>
                    <DataGridTextColumn Binding="{Binding TraderId}" Header="Trader ID" IsReadOnly="True"/>
                    <DataGridTextColumn Binding="{Binding FirstName}" Header="First name" IsReadOnly="True"/>
                    <DataGridTextColumn Binding="{Binding LastName}" Header="Last name" IsReadOnly="True"/>
                    <DataGridTextColumn Binding="{Binding PhoneNumber}" Header="Phone number" IsReadOnly="True"/>
                    <DataGridTextColumn Binding="{Binding Balance}" Header="Balance" IsReadOnly="True"/>
                    <DataGridTemplateColumn IsReadOnly="True">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Button x:Name="TraderDeleteButton" Content="Delete" Click="TraderDeleteButton_Click"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>
            <StackPanel Grid.Row="1">
                <Grid x:Name="TradersLowerGrid" MouseLeave="TradersLowerGrid_MouseLeave">
                    <Grid.Background>
                        <ImageBrush/>
                    </Grid.Background>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <ComboBox x:Name="TraderFilterComboBox" VerticalAlignment="Top" Width="120" SelectionChanged="TraderFilterComboBox_SelectionChanged" Grid.Column="4" Margin="0,5,0,0" HorizontalAlignment="Right">
                        <ComboBoxItem Content="All records" IsSelected="True"/>
                        <ComboBoxItem Content="Orange zone (balance = 0)"/>
                        <ComboBoxItem Content="Black zone (balance &lt; 0)"/>
                    </ComboBox>
                    <StackPanel HorizontalAlignment="Left">
                        <Label x:Name="TraderIdTradersLabel" Content="Trader ID (blank = new)" Margin="0,5,5,0" HorizontalAlignment="Left"/>
                        <TextBox x:Name="TraderIdTradersTextBox" Height="23" TextWrapping="Wrap" Width="120" Margin="0,5,5,0" HorizontalAlignment="Left" GotMouseCapture="TraderIdTradersTextBox_GotMouseCapture"/>
                        <Label x:Name="PhoneNumberLabel" Content="Phone number" Margin="0,5,5,0"/>
                        <TextBox x:Name="PhoneNumberTextBox" HorizontalAlignment="Left" Height="23" TextWrapping="Wrap" VerticalAlignment="Top" Width="120" Margin="0,5,5,0" GotMouseCapture="PhoneNumberTextBox_GotMouseCapture"/>
                    </StackPanel>
                    <StackPanel Grid.Column="1">
                        <Label x:Name="FirstNameLabel" Content="First name" Margin="0,5,5,0"/>
                        <TextBox x:Name="FirstNameTextBox" Height="23" TextWrapping="Wrap" Width="120" Margin="0,5,5,0" GotMouseCapture="FirstNameTextBox_GotMouseCapture"/>
                        <Label x:Name="LastNameLabel" Content="Last name" Margin="0,5,5,0"/>
                        <TextBox x:Name="LastNameTextBox" Height="23" TextWrapping="Wrap" Width="120" Margin="0,5,5,0" GotMouseCapture="LastNameTextBox_GotMouseCapture"/>
                    </StackPanel>
                    <StackPanel Grid.Column="2">
                        <Label x:Name="BalanceLabel" Content="Balance" Margin="0,5,5,0"/>
                        <TextBox x:Name="BalanceTextBox" Height="23" TextWrapping="Wrap" Width="120" Margin="0,5,5,0" HorizontalAlignment="Left" GotMouseCapture="BalanceTextBox_GotMouseCapture"/>
                        <Button x:Name="UpdateTraderButton" Content="Update" Width="75" Margin="0,38,5,0" Click="UpdateTraderButton_Click" HorizontalAlignment="Left"/>
                        <Label x:Name="TraderMessageLabel" Content="" Margin="0,5,5,0" HorizontalAlignment="Left"/>
                    </StackPanel>
                </Grid>
            </StackPanel>
        </Grid>
        <StackPanel x:Name="MainMenuStackPanel" Margin="0,10,0,0" VerticalAlignment="Top" Grid.Column="0">
            <Button x:Name="SimulationButton" Content="Start simulation" Margin="10,0,5,5" Click="SimulationButton_Click" MinWidth="100" Background="#FFDDDDDD"/>
            <Button x:Name="SimulationViewButton" Content="Status window" Margin="10,0,5,5" MinWidth="100" Click="StatusButton_Click"/>
            <Button x:Name="TraderInformationButton" Content="Trader information" Margin="10,0,5,5" MinWidth="100" Click="TraderInformationButton_Click"/>
            <Button x:Name="PortfolioInformationButton" Content="Portfolio information" Margin="10,0,5,5" MinWidth="100" Click="PortfolioInformationButton_Click"/>
            <Button x:Name="ShareInformationButton" Content="Share information" Margin="10,0,5,5" MinWidth="100" Click="ShareInformationButton_Click"/>
            <Button x:Name="TransactionInformationButton" Content="Transaction information" Margin="10,0,5,5" MinWidth="100" Click="TransactionInformationButton_Click"/>
            <Button x:Name="RefreshViewButton" Content="Refresh view" Margin="10,0,5,5" MinWidth="100" Click="RefreshViewButton_Click"/>
            <Button x:Name="ExitButton" Content="Exit" Margin="10,0,5,5" MinWidth="100" Click="ExitButton_Click"/>
        </StackPanel>
        <Grid x:Name="PortfoliosMainGrid" Margin="5,10,10,10" Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition Height="0.25*"/>
            </Grid.RowDefinitions>
            <DataGrid x:Name="portfolioDataGrid" AutoGenerateColumns="False" EnableRowVirtualization="True" ItemsSource="{Binding Mode=OneWay}" RowDetailsVisibilityMode="VisibleWhenSelected" CanUserAddRows="False" CanUserDeleteRows="False">
                <DataGrid.Columns>
                    <DataGridTextColumn x:Name="quantityColumn" Binding="{Binding TraderID}" Header="Trader ID" Width="SizeToHeader" IsReadOnly="True"/>
                    <DataGridTextColumn x:Name="shareIdColumn" Binding="{Binding ShareId}" Header="Share ID" Width="SizeToHeader" IsReadOnly="True"/>
                    <DataGridTextColumn x:Name="traderIDColumn" Binding="{Binding Quantity}" Header="Quantity" Width="SizeToHeader" IsReadOnly="True"/>
                    <DataGridTemplateColumn IsReadOnly="True">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Button x:Name="PortfolioDeleteButton" Content="Delete" Click="PortfolioDeleteButton_Click"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>
            <StackPanel x:Name="PortfoliosStackPanel" Grid.Row="1" Grid.Column="1">
                <Grid x:Name="PortfoliosLowerGrid" MouseLeave="PortfoliosLowerGrid_MouseLeave">
                    <Grid.Background>
                        <ImageBrush/>
                    </Grid.Background>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <StackPanel>
                        <Label x:Name="TraderIdLabel" Content="Trader ID" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0,5,5,0"/>
                        <TextBox x:Name="TraderIdTextBox" HorizontalAlignment="Left" Height="23" TextWrapping="Wrap" VerticalAlignment="Top" Width="120" Margin="0,5,5,0" GotMouseCapture="TraderIdTextBox_GotMouseCapture"/>
                        <Label x:Name="ShareIdLabel" Content="Share ID" Margin="0,5,5,0" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                        <TextBox x:Name="ShareIdTextBox" HorizontalAlignment="Left" Height="23" TextWrapping="Wrap" VerticalAlignment="Top" Width="120" Margin="0,5,5,0" GotMouseCapture="ShareIdTextBox_GotMouseCapture"/>
                    </StackPanel>
                    <StackPanel Grid.Column="1">
                        <Label x:Name="QuantityLabel" Content="Quantity" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0,5,5,0"/>
                        <TextBox x:Name="QuantityTextBox" Height="23" TextWrapping="Wrap" Text="1" Margin="0,5,5,0" Width="120" HorizontalAlignment="Left" VerticalAlignment="Top" GotMouseCapture="QuantityTextBox_GotMouseCapture"/>
                        <Button x:Name="UpdatePortfolioButton" Content="Update" HorizontalAlignment="Left" Margin="0,38,5,0" VerticalAlignment="Top" Click="UpdatePortfolioButton_Click"/>
                        <Label x:Name="PortfolioMessageLabel" Content="" Margin="0,0,5,0"/>
                    </StackPanel>
                </Grid>
            </StackPanel>
        </Grid>
        <Grid x:Name="SharesMainGrid" Margin="5,10,10,10" Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition Height="0.25*"/>
            </Grid.RowDefinitions>
            <DataGrid x:Name="shareDataGrid" AutoGenerateColumns="False" EnableRowVirtualization="True" ItemsSource="{Binding Mode=OneWay, Source={StaticResource shareViewSource}}" RowDetailsVisibilityMode="VisibleWhenSelected" CanUserReorderColumns="False" CanUserAddRows="False" CanUserDeleteRows="False">
                <DataGrid.Columns>
                    <DataGridTextColumn x:Name="nameColumn" Binding="{Binding ShareId}" Header="Share ID" Width="Auto" IsReadOnly="True" CanUserResize="False"/>
                    <DataGridTextColumn x:Name="priceColumn" Binding="{Binding Name}" Header="Name" Width="Auto"/>
                    <DataGridTextColumn x:Name="shareIdColumn1" Binding="{Binding Price}" Header="Price" Width="Auto"/>
                </DataGrid.Columns>
            </DataGrid>
        </Grid>
        <Grid x:Name="TransacionsMainGrid" Margin="5,10,10,10" Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition Height="0.25*"/>
            </Grid.RowDefinitions>
            <DataGrid x:Name="transactionDataGrid" AutoGenerateColumns="False" EnableRowVirtualization="True" ItemsSource="{Binding Source={StaticResource transactionViewSource}}" RowDetailsVisibilityMode="VisibleWhenSelected" CanUserAddRows="False" CanUserDeleteRows="False">
                <DataGrid.Columns>
                    <DataGridTextColumn x:Name="transactionIdColumn" Binding="{Binding TransactionId}" Header="Transaction ID" Width="Auto" IsReadOnly="True"/>
                    <DataGridTextColumn x:Name="sellerIdColumn" Binding="{Binding SellerId}" Header="Seller ID" Width="Auto" IsReadOnly="True"/>
                    <DataGridTextColumn x:Name="buyerIdColumn" Binding="{Binding BuyerId}" Header="Buyer ID" Width="Auto" IsReadOnly="True"/>
                    <DataGridTextColumn x:Name="shareIdColumn2" Binding="{Binding ShareId}" Header="Share ID" Width="Auto" IsReadOnly="True"/>
                    <DataGridTextColumn x:Name="quantityColumn1" Binding="{Binding Quantity}" Header="Quantity" Width="Auto" IsReadOnly="True"/>
                    <DataGridTextColumn x:Name="pricePerShareColumn" Binding="{Binding PricePerShare}" Header="Price per share" Width="Auto" IsReadOnly="True"/>
                    <DataGridTemplateColumn x:Name="dateTimeColumn" Header="Timestamp" Width="Auto" IsReadOnly="True" Visibility="Collapsed">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <DatePicker SelectedDate="{Binding DateTime, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTextColumn Binding="{Binding DateTime, StringFormat=\{0:dd.MM.yyyy HH:mm:ss\}}" ClipboardContentBinding="{x:Null}" Header="Timestamp" IsReadOnly="True"/>
                </DataGrid.Columns>
            </DataGrid>
        </Grid>
    </Grid>
</Window>
